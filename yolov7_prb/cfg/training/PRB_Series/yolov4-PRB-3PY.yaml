# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# CSP-Darknet backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2
   [-1, 1, Bottleneck, [64]],
   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4
   [-1, 2, BottleneckCSPC, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 5-P3/8
   [-1, 8, BottleneckCSPC, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 7-P4/16
   [-1, 8, BottleneckCSPC, [512]],
   [-1, 1, Conv, [1024, 3, 2]], # 9-P5/32
   [-1, 4, BottleneckCSPC, [1024]],  # 10
  ]

# CSP-Dark-PAN head feat PRB neck
head:
  [[6, 1, SPPCSPC, [128]], # 11 bifusion module 3 start
   [8, 1, SPPCSPC, [256]], # 12 bifusion module 2 start
   [10, 1, SPPCSPC, [512]], # 13 bifusion module 1 start
   [-1, 1, Conv, [256, 1, 1]], # 14 route PRB_1
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # RB block1 start # 15
   [6, 1, Conv, [128, 1, 2]], # route backbone P3
   [8, 1, Conv, [256, 1, 1]], # route backbone P4
   [[-1, -2, -3], 1, Concat, [1]], # RB block1 end # 18
   [-1, 1, Conv, [512, 1, 1]], 
   [-1, 2, Bottleneck, [512, False]],
   [-1, 2, BottleneckCSPB, [256]], # 21
   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # RB block2 start #23
   [4, 1, Conv, [64, 1, 2]],  # route backbone P2
   [6, 1, Conv, [128, 1, 1]], # route backbone P3
   [[-1, -2, -3], 1, Concat, [1]], # RB block2 end #26
   [-1, 1, Conv, [256, 1, 1]], 
   [-1, 2, Bottleneck, [256, False]], # 28 bifusion module 1 end
   [12, 1, Conv, [128, 1, 2]], #29 route PRB_2
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # RB block1 start # 30
   [4, 1, Conv, [64, 1, 4]],  # route backbone P2
   [6, 1, Conv, [128, 1, 2]], # route backbone P3
   [[-1, -2, -3], 1, Concat, [1]], # RB block1 end # 33
   [-1, 1, Conv, [512, 1, 1]], 
   [-1, 2, Bottleneck, [512, False]], 
   [-1, 2, BottleneckCSPB, [256]], # 36
   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # RB block2 start #38
   [2, 1, Conv, [32, 1, 4]],  # route backbone P1
   [4, 1, Conv, [64, 1, 2]], # route backbone P2
   [[-1, -2, -3], 1, Concat, [1]], # RB block2 end #41
   [-1, 1, Conv, [256, 1, 1]], 
   [-1, 2, Bottleneck, [256, False]], # 43 bifusion module 2 end
   [11, 1, Conv, [64, 1, 4]], #44 route PRB_3
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # RB block1 start # 45
   [2, 1, Conv, [32, 1, 8]],  # route backbone P1
   [4, 1, Conv, [64, 1, 4]], # route backbone P2
   [[-1, -2, -3], 1, Concat, [1]], # RB block1 end # 48
   [-1, 1, Conv, [512, 1, 1]], 
   [-1, 2, Bottleneck, [512, False]], 
   [-1, 2, BottleneckCSPB, [256]], # 51
   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # RB block2 start #53
   [1, 1, Conv, [32, 1, 4]],  # route backbone P0-1
   [2, 1, Conv, [32, 1, 4]], # route backbone P1
   [[-1, -2, -3], 1, Concat, [1]], # RB block2 end #56
   [-1, 1, Conv, [256, 1, 1]], 
   [-1, 2, Bottleneck, [256, False]], # 58 bifusion module 3 end
   [[-1,43, 28], 1, Concat, [1]], # 59 multi-pyramid fusion PY3/8
   [-1, 4, BottleneckCSPB, [128]], #60 bottleneck = PY + 1
   [-1, 1, Conv, [256, 3, 1]],
   [[52, 37 ,22], 1, Concat, [1]],  #62 multi-pyramid fusion PY4/16
   [-1, 4, BottleneckCSPB, [256]], #63 bottleneck = PY + 1
   [-1, 1, Conv, [512, 3, 1]],
   [[44, 29 ,14], 1, Concat, [1]],  #65 multi-pyramid fusion PY5/32
   [-1, 4, BottleneckCSPB, [512]], #66 bottleneck = PY + 1
   [-1, 1, Conv, [1024, 3, 1]],

   [[61,64,67], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
